spring:
  profiles:
    active: default

#  h2:
#    console:
#      enabled: true
#      path: /h2-console

  security:
    oauth2:
      client:
        registration:
          vk:
            clientId: 52586325
            clientSecret: HPoUAuI5mWttqn6OeB6t
            authorization-grant-type: authorization_code
            scope: email
            redirectUri: "https://d492-95-104-189-149.ngrok-free.app/login/oauth2/code/vk"
            provider: vk  # Добавлено

        provider:
          vk:
            authorization-uri: https://oauth.vk.com/authorize
            token-uri: https://oauth.vk.com/access_token
            user-info-uri: https://api.vk.com/method/users.get?fields=photo_200&access_token={token}&v=5.131
            user-name-attribute: id

      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:9000/oauth2/jwks

  datasource:
    url: jdbc:mysql://localhost/taco_cloud
    driverClassName: com.mysql.cj.jdbc.Driver
    username: root
    password: Porfik 10

  sql:
    init:
      mode: never

  jpa:
    hibernate:
      ddl-auto: none

  kafka:
  bootstrap-servers:
    - localhost:9092
  template:
    default-topic: tacocloud.orders.topic
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer



  data:
    rest:
      base-path: /data-api

  server:
    servlet:
      context-path: /data-api

logging:
  file:
    path: /var/logs/
    file: TacoCloud.log
  level:
    org.springframework.amqp: DEBUG
    com.rabbitmq: DEBUG

taco:
  orders:
    page-size: 10